---
title: "NP_leaflet"
format: html
---

https://public-nps.opendata.arcgis.com/datasets/nps::nps-boundary-4/explore?location=37.015375%2C-81.906543%2C6.00

```{r}
library(sf)
library(here)
library(tidyverse)
library(leaflet)
# I downloaded the data from this website and used the shp file 
# https://public-nps.opendata.arcgis.com/datasets/nps::nps-boundary-4/explore?location=37.015375%2C-81.906543%2C6.00
nps <- sf::read_sf("/Users/denalistevens/Desktop/Spring 2024/SYE/SYE/NPS_shape/nps_boundary.shp") |>
  sf::st_transform('+proj=longlat +datum=WGS84')



p_names <- nps|>
  mutate(popup = paste0('<a href =', nps$METADATA, '>',
                        nps$UNIT_NAME, '</a>'))

nps |> select(UNIT_NAME) |> arrange(UNIT_NAME)
```

```{r}
leaflet(nps) |>
  setView(lng = -110, lat = 39.833, zoom = 2.5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
              popup = p_names$popup)

# change so when name is clicked on, a table appears below the map displaying information about the park that's been clicked 
```

Scrape wiki page of national parks to get the data for map
 - maybe use inner join so the map only shows the parks I have data on? 
 
```{r}
library(rvest)

url <- "https://en.wikipedia.org/wiki/List_of_national_parks_of_the_United_States"

h <- read_html(url)

tab <- h |> html_nodes("table")

wiki_np_data <- tab[[1]] |> html_table()


# clean to get rid of everything that's not a number or letter
# use a str_remove to get rid of anything not alpha-numeric 

library(stringr)

wiki_np_clean <- wiki_np_data |> mutate(wiki_name = str_replace_all(Name, "[^[:alnum:]]", " ")) |>
  relocate(wiki_name)

# just color code the ones that I have more information available for
```

If I chose to inner_join and only display true national parks then I will have significantly less data in my map, maybe I'll just color code them? like green for parks you can click on for more  information and red for less significant ones? unless I can find more information 
```{r}
# inner_join(nps, wiki_data, by = str_detect(Name %in% UNIT_NAME))

# str remove "National Park", "National Monument", "Historical Park". . 
nps2 <- nps |> arrange(UNIT_NAME)

nps_names <- nps2$UNIT_NAME

nps_1 <- str_remove_all(nps_names, " National Park")
nps_2 <- str_remove(nps_1, " Historical ")

nps_clean <- nps |> mutate(nps_name = str_remove_all(UNIT_NAME, " National") |>
                 str_remove_all(" Historical Site") |> 
                 str_remove_all( " Historical Park") |>
                 str_remove_all( " Historical Trail") |>
                 str_remove_all( " Park")) |>
  relocate(nps_name)

# trim for whitespace

# fuzzy joining or string distances (packages)

```

Currently looking into using a fuzzy join instead - advice from Ramler 
```{r}
library(fuzzyjoin)

wiki_np_clean |>
  stringdist_inner_join(nps, by = c("wiki_name" = "UNIT_NAME"), max_dist = 5) |> 
  relocate(UNIT_NAME)

# this is very very wrong 
# try it with the one I started to clean?

joined1 <- wiki_np_clean |>
  stringdist_inner_join(nps_clean, by = c("wiki_name" = "nps_name"), max_dist = 3) |>
  relocate(wiki_name, nps_name)




# row 22, Glacier Bay and Glacier 
# missing American Samoa, New River Gorge, Wrangell St Elias

# joined1 is the data set I need and the best i can do for now 

joined2 <- nps_clean |>
  stringdist_inner_join(wiki_np_clean, by = c("nps_name" = "wiki_name"), max_dist = 4) |>
  relocate(wiki_name, nps_name) 
#remove rows 4,5,9,11,12,33, 44, 63,69,70
  
  
  
```


```{r}
leaflet(joined1) |>
  setView(lng = -98.583, lat = 39.833, zoom = 5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
              popup = p_names$popup)

# Is this not working bc of the file type? 
# How do I fix that? Do I need to join a different way? 
```

```{r}
names_2 <- joined2 |>
  mutate(popup = paste0('<a href =', joined2$METADATA, '>',
                        joined2$UNIT_NAME, '</a>'))


leaflet(joined2) |>
  setView(lng = -98.583, lat = 39.833, zoom = 5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
      popup = names_2$popup)
```

Okay this has gotten me to the point where I can now plot all of the parks I have the extended info from wiki for. Now I need to figure out have to have that information pop up when the park is clicked on. I also want just the park name to appear when the mouse hovers over it. 
```{r}
# for now just include all the information I want in the popup untill I can figure out a table 

# going to need to rename some things in joined2

joined_clean <- joined2 |> rename(Established = `Date established as park[12]`, Area = `Area (2023)[8]`, Visitors_2022 = `Recreation visitors (2022)[11]`) 

joined_clean <- joined_clean |> mutate(popup = paste(
  "Name: ", UNIT_NAME,
  "Date of Establishment: ", Established,
  "Visitors in 2022: ", Visitors_2022,
  "Description of Park: ", Description))
# need to learn how to format this 

library(htmltools)
library(glue)

label_text <- glue(
  "<b> Name: </b> {joined_clean$UNIT_NAME}<br/>",
  "<b> Established: </b> {joined_clean$Established}<br/>",
  "<b> Visitors in 2022: </b> {joined_clean$Visitors_2022}<br/>",
  "<b> Description: </b> {joined_clean$Description}<br/>") |>
  lapply(htmltools::HTML)
  
leaflet(joined_clean) |>
  setView(lng = -110, lat = 39.833, zoom = 2.5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
      label = joined_clean$UNIT_NAME,
      popup = label_text)

## yay
library(praise)
print(praise())

# okay now I need to decide if I want to include all of the parks from my origional data set and maybe color code the ones I have more information on? Or just include the ones I have the additional information for..
## also why does all of this take so long to load? the map and the app 
```

```{r}
leaflet(nps) |>
  setView(lng = -110, lat = 39.833, zoom = 2.5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
              popup = p_names$popup) |>
  addPolygons(
              color = "#000",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              data = joined_clean)
```






















```{r}
## This is not really necissary but could be useful

# okay so there's some that are the correct match, can I just match them using an if statement?? 

joined1 |> mutate(match = if_else("wiki_name" == "nps_name",
                                 true = "yes",
                                 false = "no")) |>
  relocate(match) |>
  arrange(wiki_name) 
# row 22, Glacier Bay and Glacier 
# missing American Samoa, New River Gorge, Wrangell St Elias

# WHYYYYY NO WORK

# try removing whitespace first? 

joined1 |> str_squish(wiki_name)

# I want to find a way to keep all the rows that having matching names from nps and wiki, just to see where I'm at
joined1 |> mutate(nps_names = str_squish(nps_name)) |> 
  mutate(wiki_names = str_squish(wiki_name)) |>
  mutate(match = if_else("wiki_names" == "nps_names",
                                 true = "yes",
                                 false = "no")) |>
  relocate(match)

# WHYYY
# I feel like I'm making a very dumb error and I'm very very annoyed 
# love coding 
```

 
 

