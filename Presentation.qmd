---
title: "Final Project Presentation"
format: revealjs
---
```{r}
#| echo: false
#| output: false
#| warning: false 

library(sf)
library(here)
library(tidyverse)
library(leaflet)
library(rvest)
library(stringr)
library(fuzzyjoin)
library(htmltools)
library(glue)
# I downloaded the data from this website and used the shp file 
# https://public-nps.opendata.arcgis.com/datasets/nps::nps-boundary-4/explore?location=37.015375%2C-81.906543%2C6.00
nps <- sf::read_sf("NPS_Land/nps_boundary.shp") |>
  sf::st_transform('+proj=longlat +datum=WGS84')
p_names <- nps|>
  mutate(popup = paste0('<a href =', nps$METADATA, '>',
                        nps$UNIT_NAME, '</a>'))
url <- "https://en.wikipedia.org/wiki/List_of_national_parks_of_the_United_States"
h <- read_html(url)
tab <- h |> html_nodes("table")
wiki_np_data <- tab[[1]] |> html_table()
wiki_np_clean <- wiki_np_data |> mutate(wiki_name = str_replace_all(Name, "[^[:alnum:]]", " ")) |>
  relocate(wiki_name)
nps_clean <- nps |> mutate(nps_name = str_remove_all(UNIT_NAME, " National") |>
                 str_remove_all(" Historical Site") |> 
                 str_remove_all( " Historical Park") |>
                 str_remove_all( " Historical Trail") |>
                 str_remove_all( " Park")) |>
  relocate(nps_name)
joined2 <- nps_clean |>
  stringdist_inner_join(wiki_np_clean, by = c("nps_name" = "wiki_name"), max_dist = 3) |>
  relocate(wiki_name, nps_name)
joined_clean <- joined2 |> rename(Established = `Date established as park[12]`, Area = `Area (2023)[8]`, Visitors_2022 = `Recreation visitors (2022)[11]`) 

joined_clean <- joined_clean |> mutate(popup = paste(
  "Name: ", UNIT_NAME,
  "Date of Establishment: ", Established,
  "Visitors in 2022: ", Visitors_2022,
  "Description of Park: ", Description))
label_text <- glue(
  "<b> Name: </b> {joined_clean$UNIT_NAME}<br/>",
  "<b> Established: </b> {joined_clean$Established}<br/>",
  "<b> Visitors in 2022: </b> {joined_clean$Visitors_2022}<br/>",
  "<b> Description: </b> {joined_clean$Description}<br/>") |>
  lapply(htmltools::HTML)

library("httr")
library("readxl")
library(scales)
options(scipen = 999)
library(dplyr)
library(plotly)
library(tidyverse)


GET("https://query.data.world/s/fr5k6pcrcweo7wr657vchbeq6f3cci?dws=00000", write_disk(tf <- tempfile(fileext = ".xlsx")))
df <- read_excel(tf)
df <- df |> 
  rename(Year = YearRaw) |>
  rename(Type = `Unit Type`) |> 
  rename(Name = `Unit Name`)

np_visitors <- df |> 
  filter(Type == "National Park") |>
  filter(Year != "Total") |>
  filter(Year >= 1995 & Year <= 2016)

one_park <- np_visitors |>
  filter(Name == "Acadia National Park")
```




## Data
* Shape file from National Park Service to plot all areas under their classification of national parks
  * This not only includes what we think of as traditional national parks, but also other park units like historic sites and trails, shorelines, and plently of other classifications.
* Also using data about the amount of visitors in national parks. This data set contained information going back to 1906, but I chose just to plot 1995 to 2015 to simplify it. 

## Visualization 1
```{r}
leaflet(joined_clean) |>
  setView(lng = -110, lat = 39.833, zoom = 2.5) |>
  addTiles() |>
  addProviderTiles(providers$OpenStreetMap.Mapnik) |>
  addPolygons(color = "#006600",
              weight = 1.5,
              smoothFactor = .5,
              opacity = 1.0, 
              fillOpacity = 0.5,
              highlightOptions = highlightOptions(color = "#003300", weight = 2,
      bringToFront = TRUE),
      label = joined_clean$UNIT_NAME,
      popup = label_text)
```

## Visualization 2
```{r}
visitors_plot <- ggplot(data = np_visitors, aes(x = Year, y = Visitors, group = Name,
                                                      label = Name,
                                                      label2 = Year,
                                                      label3 = Visitors)) +
        geom_line(aes(color = Name), show.legend = FALSE) +
        scale_color_viridis_d() +
        scale_y_continuous(labels = scales::comma) +
        labs(title = "Visitors in National Parks from 1995 to 2016") +
        theme_minimal() +
        theme(legend.position = "none")
      
      ggplotly(visitors_plot, tooltip = c("label", "label2", "label3"))
```

## Visualization 3
```{r}
op_plot <- ggplot(data = one_park, aes(x = Year, y = Visitors)) +
  geom_col(colour = 'darkolivegreen', fill = 'darkolivegreen3',
           position = "dodge") +
  labs(title = "Vistitors in Acadia National Park from 1995 to 2016")

ggplotly(op_plot)
```
